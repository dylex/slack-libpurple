name: Cross compile for Windows
on:
  - push
  - pull_request
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
      attestations: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up MinGW
        run: |
          sudo apt update
          sudo apt install -y gcc-mingw-w64-i686-win32

      - name: Load Pidgin from cache
        id: pidgin-cache
        uses: actions/cache@v4
        with:
          path: pidgin
          key: pidgin-2.10.11
      
      - name: Download Pidgin
        if: steps.pidgin-cache.outputs.cache-hit != 'true'
        run: |
          curl --http1.1 -L https://sourceforge.net/projects/pidgin/files/Pidgin/2.10.11/pidgin-2.10.11.tar.bz2/download -o pidgin.tar.bz2
          tar -xf pidgin.tar.bz2
          mv pidgin-2.10.11 pidgin
          curl --http1.1 -L https://sourceforge.net/projects/pidgin/files/Pidgin/2.10.11/pidgin-2.10.11-win32-bin.zip/download -o pidgin-win32bin.zip
          unzip pidgin-win32bin.zip
          cp pidgin-2.10.11-win32bin/libpurple.dll pidgin/libpurple/
      
      - name: Load Win32 deps from cache
        id: win32-cache
        uses: actions/cache@v4
        with:
          path: win32-dev
          key: win32-dev
      
      - name: Setup WinPidgin build
        if: steps.win32-cache.outputs.cache-hit != 'true'
        run: |
          mkdir win32-dev
          curl --http1.1 -L https://download.gnome.org/binaries/win32/glib/2.28/glib-dev_2.28.8-1_win32.zip -o glib-dev.zip
          unzip glib-dev.zip -d win32-dev/glib-2.28.8
          curl --http1.1 -L https://download.gnome.org/binaries/win32/dependencies/gettext-runtime-dev_0.18.1.1-2_win32.zip -o gettext-runtime.zip
          unzip gettext-runtime.zip -d win32-dev/glib-2.28.8
          curl --http1.1 -L https://download.gnome.org/binaries/win32/dependencies/zlib-dev_1.2.5-2_win32.zip -o zlib-dev.zip
          unzip zlib-dev.zip -d win32-dev/glib-2.28.8

          ls win32-dev/

      - name: make
        run: |
          export WIN32_CC=i686-w64-mingw32-gcc
          export WIN32_DEV_TOP=win32-dev
          export PIDGIN_TREE_TOP=pidgin
          export OS=Windows_NT
          make libslack.dll

      - name: archive
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v4
        with: 
            name: plugin 
            path: lib*.dll

      - name: release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !env.ACT
        uses: ncipollo/release-action@v1
        with:
          artifacts: lib*.dll
          tag: nightly-${{ github.sha }}
          name: Nightly ${{ github.sha }}
          allowUpdates: true
          makeLatest: true

      - name: attest
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !env.ACT
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: lib*.dll
